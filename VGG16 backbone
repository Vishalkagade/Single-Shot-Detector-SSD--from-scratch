class VGG16_NET(nn.Module):
    def __init__(self):
        super(VGG16_NET, self).__init__()
        self.conv1  = nn.Conv2d(in_channels=3,   out_channels=64,  kernel_size=3, padding=1)
        self.conv2  = nn.Conv2d(in_channels=64,  out_channels=64,  kernel_size=3, padding=1)
        self.conv3  = nn.Conv2d(in_channels=64,  out_channels=128, kernel_size=3, padding=1)
        self.conv4  = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=3, padding=1)
        self.conv5  = nn.Conv2d(in_channels=128, out_channels=256, kernel_size=3, padding=1)
        self.conv6  = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=3, padding=1)
        self.conv7  = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=3, padding=1)
        self.conv8  = nn.Conv2d(in_channels=256, out_channels=512, kernel_size=3, padding=1)
        self.conv9  = nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, padding=1)
        self.conv10 = nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, padding=1)
        self.conv11 = nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, padding=1)
        self.conv12 = nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, padding=1)
        self.conv13 = nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, padding=1)
        self.maxpool= nn.MaxPool2d(kernel_size=2, stride=2)
        self.maxpool1= nn.MaxPool2d(kernel_size=3, stride=1,padding=1)
        self.maxpool2 = nn.MaxPool2d(kernel_size=2, stride=2, ceil_mode=True) 
        self.conv14 = nn.Conv2d(512, 1024,kernel_size=3,padding=6,dilation=6)
        self.conv15 = nn.Conv2d(1024, 1024,kernel_size=1)
    def forward(self, x):
        x = F.relu(self.conv1(x))
        x = F.relu(self.conv2(x))
        x = self.maxpool(x)
        x = F.relu(self.conv3(x))
        x = F.relu(self.conv4(x))
        x = self.maxpool(x)
        x = F.relu(self.conv5(x))
        x = F.relu(self.conv6(x))
        x = F.relu(self.conv7(x))
        x = self.maxpool2(x)
        x = F.relu(self.conv8(x))
        x = F.relu(self.conv9(x))
        x = F.relu(self.conv10(x))
        head1=x
        x = self.maxpool(x)
        x = F.relu(self.conv11(x))
        x = F.relu(self.conv12(x))
        x = F.relu(self.conv13(x))
        x = self.maxpool1(x)
        x = F.relu(self.conv14(x))
        x = F.relu(self.conv15(x))
        head2=x
        return head1,head2
        
        
